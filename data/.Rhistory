setwd("D:/MDs/XVG")
read_and_clean_xvg <- function(file) {
# Read the file and skip lines that start with # or @ (these are headers/comments)
data <- read.table(file, comment.char = "@", fill = TRUE, header = FALSE)
# Remove rows where the first column is not numeric (typically headers/comments)
data <- data[!grepl("^[@#]", data$V1), ]
# Convert columns to numeric to ensure data is clean
data <- data.frame(lapply(data, as.numeric))
# Keep only the first two columns (time and RMSD)
data <- data[, 1:2]
# Assign column names
colnames(data) <- c("Time", "RMSD")
return(data)
}
#Use the Function to Read an .xvg File and Preview the Data
file_path <- "rmsd.xvg"
# Read and clean the .xvg file
cleaned_data <- read_and_clean_xvg(file_path)
View(cleaned_data)
read_and_clean_xvg <- function(file) {
# Read the file and skip lines that start with @ (these are headers/comments)
data <- read.table(file, comment.char = "@", fill = TRUE, header = FALSE)
# Remove rows where the first column is not numeric (typically headers/comments)
data <- data[!grepl("^[@#]", data$V1), ]
# Convert columns to numeric to ensure data is clean
data <- data.frame(lapply(data, as.numeric))
# Remove rows with NA values
data <- na.omit(data)
# Keep only the first two columns (time and RMSD)
data <- data[, 1:2]
# Assign column names
colnames(data) <- c("Time", "RMSD")
return(data)
}
#Use the Function to Read an .xvg File and Preview the Data
file_path <- "rmsd.xvg"
# Read and clean the .xvg file
cleaned_data <- read_and_clean_xvg(file_path)
read_and_clean_xvg <- function(file) {
# Read the file and skip lines that start with @ (these are headers/comments)
data <- read.table(file, comment.char = "@", fill = TRUE, header = FALSE)
# Remove rows where the first column is not numeric (typically headers/comments)
data <- data[!grepl("^[@#]", data$V1), ]
# Convert the remaining data into a data frame with numeric columns
data <- data.frame(lapply(data, as.numeric))
# Remove rows with NA values
data <- na.omit(data)
# Keep only the first two columns (time and RMSD)
data <- data[, 1:2]
# Assign column names
colnames(data) <- c("Time", "RMSD")
return(data)
}
#Use the Function to Read an .xvg File and Preview the Data
file_path <- "rmsd.xvg"
# Read and clean the .xvg file
cleaned_data <- read_and_clean_xvg(file_path)
read_and_clean_xvg <- function(file) {
# Read the file and skip lines that start with # or @ (these are headers/comments)
data <- read.table(file, comment.char = "@", fill = TRUE, header = FALSE)
# Remove rows where the first column is not numeric (typically headers/comments)
data <- data[!grepl("^[@#]", data$V1), ]
# Convert columns to numeric to ensure data is clean
data <- data.frame(lapply(data, as.numeric))
# Keep only the first two columns (time and RMSD)
data <- data[, 1:2]
# Assign column names
colnames(data) <- c("Time", "RMSD")
return(data)
}
#Use the Function to Read an .xvg File and Preview the Data
file_path <- "rmsd.xvg"
# Read and clean the .xvg file
cleaned_data <- read_and_clean_xvg(file_path)
View(cleaned_data)
# Read and clean the .xvg file
cleaned_data <- na.omit(read_and_clean_xvg(file_path))
View(cleaned_data)
# Preview the cleaned data
head(cleaned_data)
# Convert RMSD from nm to Å (1 nm = 10 Å)
cleaned_data$`RMSD (Å)` <- cleaned_data$RMSD * 10
# Preview the updated data frame
head(cleaned_data)
View(cleaned_data)
read_and_clean_xvg <- function(file) {
# Read the file and skip lines that start with # or @ (these are headers/comments)
data <- read.table(file, comment.char = "@", fill = TRUE, header = FALSE)
# Remove rows where the first column is not numeric (typically headers/comments)
data <- data[!grepl("^[@#]", data$V1), ]
# Convert columns to numeric to ensure data is clean
data <- data.frame(lapply(data, as.numeric))
# Keep only the first two columns (time and RMSD)
data <- data[, 1:2]
# Assign column names
colnames(data) <- c("Time (ns)", "RMSD")
return(data)
}
#Use the Function to Read an .xvg File and Preview the Data
file_path <- "rmsd.xvg"
# Read and clean the .xvg file
cleaned_data <- na.omit(read_and_clean_xvg(file_path))
# Preview the cleaned data
head(cleaned_data)
# Convert RMSD from nm to Å (1 nm = 10 Å)
cleaned_data$`RMSD (Å)` <- cleaned_data$RMSD * 10
# Preview the updated data frame
head(cleaned_data)
View(cleaned_data)
#===============================================================================
library(ggplot2)
# Create a high-quality ggplot of RMSD
p <- ggplot(cleaned_data, aes(x = Time, y = `RMSD (Å)`)) +
geom_line(color = "blue", size = 1) +           # Line plot with color and thickness
geom_point(color = "red", size = 2) +           # Optional: add points
theme_minimal() +                               # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Title customization
axis.title.x = element_text(size = 12),  # X-axis title customization
axis.title.y = element_text(size = 12),  # Y-axis title customization
axis.text.x = element_text(size = 10),    # X-axis labels customization
axis.text.y = element_text(size = 10),    # Y-axis labels customization
panel.grid.major = element_line(color = "grey80"), # Major grid lines
panel.grid.minor = element_blank()  # No minor grid lines
) +
labs(
title = "RMSD vs. Time",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) + # Remove extra space at the ends
scale_y_continuous(expand = c(0, 0))
# Create a high-quality ggplot of RMSD
p <- ggplot(cleaned_data, aes(x = Time, y = `RMSD (Å)`)) +
geom_line(color = "blue", size = 1) +           # Line plot with color and thickness
geom_point(color = "red", size = 2) +           # Optional: add points
theme_minimal() +                               # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, linewidth = 14, face = "bold"),  # Title customization
axis.title.x = element_text(size = 12),  # X-axis title customization
axis.title.y = element_text(size = 12),  # Y-axis title customization
axis.text.x = element_text(size = 10),    # X-axis labels customization
axis.text.y = element_text(size = 10),    # Y-axis labels customization
panel.grid.major = element_line(color = "grey80"), # Major grid lines
panel.grid.minor = element_blank()  # No minor grid lines
) +
labs(
title = "RMSD vs. Time",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) + # Remove extra space at the ends
scale_y_continuous(expand = c(0, 0))
# Create a high-quality ggplot of RMSD
p <- ggplot(cleaned_data, aes(x = Time, y = `RMSD (Å)`)) +
geom_line(color = "blue", size = 1) +           # Line plot with color and thickness
geom_point(color = "red", size = 2) +           # Optional: add points
theme_minimal() +                               # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Title customization
axis.title.x = element_text(size = 12),  # X-axis title customization
axis.title.y = element_text(size = 12),  # Y-axis title customization
axis.text.x = element_text(size = 10),    # X-axis labels customization
axis.text.y = element_text(size = 10),    # Y-axis labels customization
panel.grid.major = element_line(color = "grey80"), # Major grid lines
panel.grid.minor = element_blank()  # No minor grid lines
) +
labs(
title = "RMSD vs. Time",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) + # Remove extra space at the ends
scale_y_continuous(expand = c(0, 0))
print(p)
View(cleaned_data)
# Create a high-quality ggplot of RMSD
p <- ggplot(cleaned_data, aes(x = `Time (ns)`, y = `RMSD (Å)`)) +
geom_line(color = "blue", size = 1) +           # Line plot with color and thickness
geom_point(color = "red", size = 2) +           # Optional: add points
theme_minimal() +                               # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Title customization
axis.title.x = element_text(size = 12),  # X-axis title customization
axis.title.y = element_text(size = 12),  # Y-axis title customization
axis.text.x = element_text(size = 10),    # X-axis labels customization
axis.text.y = element_text(size = 10),    # Y-axis labels customization
panel.grid.major = element_line(color = "grey80"), # Major grid lines
panel.grid.minor = element_blank()  # No minor grid lines
) +
labs(
title = "RMSD vs. Time",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) + # Remove extra space at the ends
scale_y_continuous(expand = c(0, 0))
print(p)
read_and_clean_xvg <- function(file) {
# Read the file and skip lines that start with # or @ (these are headers/comments)
data <- read.table(file, comment.char = "@", fill = TRUE, header = FALSE)
# Remove rows where the first column is not numeric (typically headers/comments)
data <- data[!grepl("^[@#]", data$V1), ]
# Convert columns to numeric to ensure data is clean
data <- data.frame(lapply(data, as.numeric))
# Keep only the first two columns (time and RMSD)
data <- data[, 1:2]
# Assign column names
colnames(data) <- c("Time (ns)", "RMSD")
return(data)
}
#Use the Function to Read an .xvg File and Preview the Data
ER_rmsd <- "rmsd.xvg"
BIP_rmsd <- "rmsd_BIP.xvg"
# Read and clean the .xvg file
cleaned_data <- na.omit(read_and_clean_xvg(ER_rmsd))
cleaned_data <- na.omit(read_and_clean_xvg(BIP_rmsd))
# Read and clean the .xvg file
cleaned_ER <- na.omit(read_and_clean_xvg(ER_rmsd))
cleaned_BIP <- na.omit(read_and_clean_xvg(BIP_rmsd))
# Preview the cleaned data
head(cleaned_ER)
# Convert RMSD from nm to Å (1 nm = 10 Å)
cleaned_ER$`RMSD (Å)` <- cleaned_ER$RMSD * 10
cleaned_BIP$`RMSD (Å)` <- cleaned_BIP$RMSD * 10
# Preview the updated data frame
head(cleaned_ER)
# Create a high-quality ggplot of RMSD
p <- ggplot(cleaned_ER, aes(x = `Time (ns)`, y = `RMSD (Å)`)) +
geom_line(color = "blue", size = 1) +           # Line plot with color and thickness
geom_point(color = "red", size = 2) +           # Optional: add points
theme_minimal() +                               # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  # Title customization
axis.title.x = element_text(size = 12),  # X-axis title customization
axis.title.y = element_text(size = 12),  # Y-axis title customization
axis.text.x = element_text(size = 10),    # X-axis labels customization
axis.text.y = element_text(size = 10),    # Y-axis labels customization
panel.grid.major = element_line(color = "grey80"), # Major grid lines
panel.grid.minor = element_blank()  # No minor grid lines
) +
labs(
title = "RMSD vs. Time",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) + # Remove extra space at the ends
scale_y_continuous(expand = c(0, 0))
print(p)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = Time, y = `RMSD (Å)`)) +
geom_line(color = "black", size = 1) +       # Plot the first dataset with green color
geom_point(color = "green", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time (ns)`, y = `RMSD (Å)`)) +
geom_line(color = "black", size = 1) +       # Plot the first dataset with green color
geom_point(color = "green", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time (ns)`, y = `RMSD (Å)`)) +
geom_line(color = "green", size = 1) +       # Plot the first dataset with green color
geom_point(color = "black", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time (ns)`, y = `RMSD (Å)`)) +
geom_line(color = "orange", size = 1) +       # Plot the first dataset with green color
geom_point(color = "black", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time (ns)`, y = `RMSD (Å)`)) +
#geom_line(color = "orange", size = 1) +       # Plot the first dataset with green color
geom_point(color = "black", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
View(cleaned_BIP)
View(cleaned_BIP)
cleaned_BIP$`Time(ns)` <- cleaned_BIP$`Time(ns)` / 1000 #in case the time in pico seconds
cleaned_BIP$`Time(ns)` <- cleaned_BIP$`Time (ns)` / 1000 #in case the time in pico seconds
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time(ns)`, y = `RMSD (Å)`)) +
geom_line(color = "orange", size = 1) +       # Plot the first dataset with green color
geom_point(color = "black", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time(ns)`, y = `RMSD (Å)`)) +
geom_line(color = "black", size = 1) +       # Plot the first dataset with green color
geom_point(color = "black", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
# Plot the second data frame
p1 <- ggplot(cleaned_BIP, aes(x = `Time(ns)`, y = `RMSD (Å)`)) +
geom_line(color = "black", size = 1) +       # Plot the first dataset with green color
#geom_point(color = "black", size = 2) +      # Optional: add points with the same color
theme_minimal() +                           # Use a minimal theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
) +
labs(
title = "RMSD Comparison",
x = "Time (ns)",
y = "RMSD (Å)"
) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
print(p1)
